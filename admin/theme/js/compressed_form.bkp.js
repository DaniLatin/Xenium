function diff_match_patch(){this.Diff_Timeout=1.0;this.Diff_EditCost=4;this.Diff_DualThreshold=32;this.Match_Threshold=0.5;this.Match_Distance=1000;this.Patch_DeleteThreshold=0.5;this.Patch_Margin=4;function getMaxBits(){var maxbits=0;var oldi=1;var newi=2;while(oldi!=newi){maxbits++;oldi=newi;newi=newi<<1}return maxbits}this.Match_MaxBits=getMaxBits()}var DIFF_DELETE=-1;var DIFF_INSERT=1;var DIFF_EQUAL=0;diff_match_patch.prototype.diff_main=function(text1,text2,opt_checklines){if(text1==text2){return[[DIFF_EQUAL,text1]]}if(typeof opt_checklines=='undefined'){opt_checklines=true}var checklines=opt_checklines;var commonlength=this.diff_commonPrefix(text1,text2);var commonprefix=text1.substring(0,commonlength);text1=text1.substring(commonlength);text2=text2.substring(commonlength);commonlength=this.diff_commonSuffix(text1,text2);var commonsuffix=text1.substring(text1.length-commonlength);text1=text1.substring(0,text1.length-commonlength);text2=text2.substring(0,text2.length-commonlength);var diffs=this.diff_compute(text1,text2,checklines);if(commonprefix){diffs.unshift([DIFF_EQUAL,commonprefix])}if(commonsuffix){diffs.push([DIFF_EQUAL,commonsuffix])}this.diff_cleanupMerge(diffs);return diffs};diff_match_patch.prototype.diff_compute=function(text1,text2,checklines){var diffs;if(!text1){return[[DIFF_INSERT,text2]]}if(!text2){return[[DIFF_DELETE,text1]]}var longtext=text1.length>text2.length?text1:text2;var shorttext=text1.length>text2.length?text2:text1;var i=longtext.indexOf(shorttext);if(i!=-1){diffs=[[DIFF_INSERT,longtext.substring(0,i)],[DIFF_EQUAL,shorttext],[DIFF_INSERT,longtext.substring(i+shorttext.length)]];if(text1.length>text2.length){diffs[0][0]=diffs[2][0]=DIFF_DELETE}return diffs}longtext=shorttext=null;var hm=this.diff_halfMatch(text1,text2);if(hm){var text1_a=hm[0];var text1_b=hm[1];var text2_a=hm[2];var text2_b=hm[3];var mid_common=hm[4];var diffs_a=this.diff_main(text1_a,text2_a,checklines);var diffs_b=this.diff_main(text1_b,text2_b,checklines);return diffs_a.concat([[DIFF_EQUAL,mid_common]],diffs_b)}if(checklines&&(text1.length<100||text2.length<100)){checklines=false}var linearray;if(checklines){var a=this.diff_linesToChars(text1,text2);text1=a[0];text2=a[1];linearray=a[2]}diffs=this.diff_map(text1,text2);if(!diffs){diffs=[[DIFF_DELETE,text1],[DIFF_INSERT,text2]]}if(checklines){this.diff_charsToLines(diffs,linearray);this.diff_cleanupSemantic(diffs);diffs.push([DIFF_EQUAL,'']);var pointer=0;var count_delete=0;var count_insert=0;var text_delete='';var text_insert='';while(pointer<diffs.length){switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++;text_insert+=diffs[pointer][1];break;case DIFF_DELETE:count_delete++;text_delete+=diffs[pointer][1];break;case DIFF_EQUAL:if(count_delete>=1&&count_insert>=1){var a=this.diff_main(text_delete,text_insert,false);diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert);pointer=pointer-count_delete-count_insert;for(var j=a.length-1;j>=0;j--){diffs.splice(pointer,0,a[j])}pointer=pointer+a.length}count_insert=0;count_delete=0;text_delete='';text_insert='';break}pointer++}diffs.pop()}return diffs};diff_match_patch.prototype.diff_linesToChars=function(text1,text2){var lineArray=[];var lineHash={};lineArray[0]='';function diff_linesToCharsMunge(text){var chars='';var lineStart=0;var lineEnd=-1;var lineArrayLength=lineArray.length;while(lineEnd<text.length-1){lineEnd=text.indexOf('\n',lineStart);if(lineEnd==-1){lineEnd=text.length-1}var line=text.substring(lineStart,lineEnd+1);lineStart=lineEnd+1;if(lineHash.hasOwnProperty?lineHash.hasOwnProperty(line):(lineHash[line]!==undefined)){chars+=String.fromCharCode(lineHash[line])}else{chars+=String.fromCharCode(lineArrayLength);lineHash[line]=lineArrayLength;lineArray[lineArrayLength++]=line}}return chars}var chars1=diff_linesToCharsMunge(text1);var chars2=diff_linesToCharsMunge(text2);return[chars1,chars2,lineArray]};diff_match_patch.prototype.diff_charsToLines=function(diffs,lineArray){for(var x=0;x<diffs.length;x++){var chars=diffs[x][1];var text=[];for(var y=0;y<chars.length;y++){text[y]=lineArray[chars.charCodeAt(y)]}diffs[x][1]=text.join('')}};diff_match_patch.prototype.diff_map=function(text1,text2){var ms_end=(new Date()).getTime()+this.Diff_Timeout*1000;var text1_length=text1.length;var text2_length=text2.length;var max_d=text1_length+text2_length-1;var doubleEnd=this.Diff_DualThreshold*2<max_d;var v_map1=[];var v_map2=[];var v1={};var v2={};v1[1]=0;v2[1]=0;var x,y;var footstep;var footsteps={};var done=false;var hasOwnProperty=!!(footsteps.hasOwnProperty);var front=(text1_length+text2_length)%2;for(var d=0;d<max_d;d++){if(this.Diff_Timeout>0&&(new Date()).getTime()>ms_end){return null}v_map1[d]={};for(var k=-d;k<=d;k+=2){if(k==-d||k!=d&&v1[k-1]<v1[k+1]){x=v1[k+1]}else{x=v1[k-1]+1}y=x-k;if(doubleEnd){footstep=x+','+y;if(front&&(hasOwnProperty?footsteps.hasOwnProperty(footstep):(footsteps[footstep]!==undefined))){done=true}if(!front){footsteps[footstep]=d}}while(!done&&x<text1_length&&y<text2_length&&text1.charAt(x)==text2.charAt(y)){x++;y++;if(doubleEnd){footstep=x+','+y;if(front&&(hasOwnProperty?footsteps.hasOwnProperty(footstep):(footsteps[footstep]!==undefined))){done=true}if(!front){footsteps[footstep]=d}}}v1[k]=x;v_map1[d][x+','+y]=true;if(x==text1_length&&y==text2_length){return this.diff_path1(v_map1,text1,text2)}else if(done){v_map2=v_map2.slice(0,footsteps[footstep]+1);var a=this.diff_path1(v_map1,text1.substring(0,x),text2.substring(0,y));return a.concat(this.diff_path2(v_map2,text1.substring(x),text2.substring(y)))}}if(doubleEnd){v_map2[d]={};for(var k=-d;k<=d;k+=2){if(k==-d||k!=d&&v2[k-1]<v2[k+1]){x=v2[k+1]}else{x=v2[k-1]+1}y=x-k;footstep=(text1_length-x)+','+(text2_length-y);if(!front&&(hasOwnProperty?footsteps.hasOwnProperty(footstep):(footsteps[footstep]!==undefined))){done=true}if(front){footsteps[footstep]=d}while(!done&&x<text1_length&&y<text2_length&&text1.charAt(text1_length-x-1)==text2.charAt(text2_length-y-1)){x++;y++;footstep=(text1_length-x)+','+(text2_length-y);if(!front&&(hasOwnProperty?footsteps.hasOwnProperty(footstep):(footsteps[footstep]!==undefined))){done=true}if(front){footsteps[footstep]=d}}v2[k]=x;v_map2[d][x+','+y]=true;if(done){v_map1=v_map1.slice(0,footsteps[footstep]+1);var a=this.diff_path1(v_map1,text1.substring(0,text1_length-x),text2.substring(0,text2_length-y));return a.concat(this.diff_path2(v_map2,text1.substring(text1_length-x),text2.substring(text2_length-y)))}}}}return null};diff_match_patch.prototype.diff_path1=function(v_map,text1,text2){var path=[];var x=text1.length;var y=text2.length;var last_op=null;for(var d=v_map.length-2;d>=0;d--){while(1){if(v_map[d].hasOwnProperty?v_map[d].hasOwnProperty((x-1)+','+y):(v_map[d][(x-1)+','+y]!==undefined)){x--;if(last_op===DIFF_DELETE){path[0][1]=text1.charAt(x)+path[0][1]}else{path.unshift([DIFF_DELETE,text1.charAt(x)])}last_op=DIFF_DELETE;break}else if(v_map[d].hasOwnProperty?v_map[d].hasOwnProperty(x+','+(y-1)):(v_map[d][x+','+(y-1)]!==undefined)){y--;if(last_op===DIFF_INSERT){path[0][1]=text2.charAt(y)+path[0][1]}else{path.unshift([DIFF_INSERT,text2.charAt(y)])}last_op=DIFF_INSERT;break}else{x--;y--;if(last_op===DIFF_EQUAL){path[0][1]=text1.charAt(x)+path[0][1]}else{path.unshift([DIFF_EQUAL,text1.charAt(x)])}last_op=DIFF_EQUAL}}}return path};diff_match_patch.prototype.diff_path2=function(v_map,text1,text2){var path=[];var pathLength=0;var x=text1.length;var y=text2.length;var last_op=null;for(var d=v_map.length-2;d>=0;d--){while(1){if(v_map[d].hasOwnProperty?v_map[d].hasOwnProperty((x-1)+','+y):(v_map[d][(x-1)+','+y]!==undefined)){x--;if(last_op===DIFF_DELETE){path[pathLength-1][1]+=text1.charAt(text1.length-x-1)}else{path[pathLength++]=[DIFF_DELETE,text1.charAt(text1.length-x-1)]}last_op=DIFF_DELETE;break}else if(v_map[d].hasOwnProperty?v_map[d].hasOwnProperty(x+','+(y-1)):(v_map[d][x+','+(y-1)]!==undefined)){y--;if(last_op===DIFF_INSERT){path[pathLength-1][1]+=text2.charAt(text2.length-y-1)}else{path[pathLength++]=[DIFF_INSERT,text2.charAt(text2.length-y-1)]}last_op=DIFF_INSERT;break}else{x--;y--;if(last_op===DIFF_EQUAL){path[pathLength-1][1]+=text1.charAt(text1.length-x-1)}else{path[pathLength++]=[DIFF_EQUAL,text1.charAt(text1.length-x-1)]}last_op=DIFF_EQUAL}}}return path};diff_match_patch.prototype.diff_commonPrefix=function(text1,text2){if(!text1||!text2||text1.charCodeAt(0)!==text2.charCodeAt(0)){return 0}var pointermin=0;var pointermax=Math.min(text1.length,text2.length);var pointermid=pointermax;var pointerstart=0;while(pointermin<pointermid){if(text1.substring(pointerstart,pointermid)==text2.substring(pointerstart,pointermid)){pointermin=pointermid;pointerstart=pointermin}else{pointermax=pointermid}pointermid=Math.floor((pointermax-pointermin)/2+pointermin)}return pointermid};diff_match_patch.prototype.diff_commonSuffix=function(text1,text2){if(!text1||!text2||text1.charCodeAt(text1.length-1)!==text2.charCodeAt(text2.length-1)){return 0}var pointermin=0;var pointermax=Math.min(text1.length,text2.length);var pointermid=pointermax;var pointerend=0;while(pointermin<pointermid){if(text1.substring(text1.length-pointermid,text1.length-pointerend)==text2.substring(text2.length-pointermid,text2.length-pointerend)){pointermin=pointermid;pointerend=pointermin}else{pointermax=pointermid}pointermid=Math.floor((pointermax-pointermin)/2+pointermin)}return pointermid};diff_match_patch.prototype.diff_halfMatch=function(text1,text2){var longtext=text1.length>text2.length?text1:text2;var shorttext=text1.length>text2.length?text2:text1;if(longtext.length<10||shorttext.length<1){return null}var dmp=this;function diff_halfMatchI(longtext,shorttext,i){var seed=longtext.substring(i,i+Math.floor(longtext.length/4));var j=-1;var best_common='';var best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b;while((j=shorttext.indexOf(seed,j+1))!=-1){var prefixLength=dmp.diff_commonPrefix(longtext.substring(i),shorttext.substring(j));var suffixLength=dmp.diff_commonSuffix(longtext.substring(0,i),shorttext.substring(0,j));if(best_common.length<suffixLength+prefixLength){best_common=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength);best_longtext_a=longtext.substring(0,i-suffixLength);best_longtext_b=longtext.substring(i+prefixLength);best_shorttext_a=shorttext.substring(0,j-suffixLength);best_shorttext_b=shorttext.substring(j+prefixLength)}}if(best_common.length>=longtext.length/2){return[best_longtext_a,best_longtext_b,best_shorttext_a,best_shorttext_b,best_common]}else{return null}}var hm1=diff_halfMatchI(longtext,shorttext,Math.ceil(longtext.length/4));var hm2=diff_halfMatchI(longtext,shorttext,Math.ceil(longtext.length/2));var hm;if(!hm1&&!hm2){return null}else if(!hm2){hm=hm1}else if(!hm1){hm=hm2}else{hm=hm1[4].length>hm2[4].length?hm1:hm2}var text1_a,text1_b,text2_a,text2_b;if(text1.length>text2.length){text1_a=hm[0];text1_b=hm[1];text2_a=hm[2];text2_b=hm[3]}else{text2_a=hm[0];text2_b=hm[1];text1_a=hm[2];text1_b=hm[3]}var mid_common=hm[4];return[text1_a,text1_b,text2_a,text2_b,mid_common]};diff_match_patch.prototype.diff_cleanupSemantic=function(diffs){var changes=false;var equalities=[];var equalitiesLength=0;var lastequality=null;var pointer=0;var length_changes1=0;var length_changes2=0;while(pointer<diffs.length){if(diffs[pointer][0]==DIFF_EQUAL){equalities[equalitiesLength++]=pointer;length_changes1=length_changes2;length_changes2=0;lastequality=diffs[pointer][1]}else{length_changes2+=diffs[pointer][1].length;if(lastequality!==null&&(lastequality.length<=length_changes1)&&(lastequality.length<=length_changes2)){diffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]);diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT;equalitiesLength--;equalitiesLength--;pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1;length_changes1=0;length_changes2=0;lastequality=null;changes=true}}pointer++}if(changes){this.diff_cleanupMerge(diffs)}this.diff_cleanupSemanticLossless(diffs)};diff_match_patch.prototype.diff_cleanupSemanticLossless=function(diffs){var punctuation=/[^a-zA-Z0-9]/;var whitespace=/\s/;var linebreak=/[\r\n]/;var blanklineEnd=/\n\r?\n$/;var blanklineStart=/^\r?\n\r?\n/;function diff_cleanupSemanticScore(one,two){if(!one||!two){return 5}var score=0;if(one.charAt(one.length-1).match(punctuation)||two.charAt(0).match(punctuation)){score++;if(one.charAt(one.length-1).match(whitespace)||two.charAt(0).match(whitespace)){score++;if(one.charAt(one.length-1).match(linebreak)||two.charAt(0).match(linebreak)){score++;if(one.match(blanklineEnd)||two.match(blanklineStart)){score++}}}}return score}var pointer=1;while(pointer<diffs.length-1){if(diffs[pointer-1][0]==DIFF_EQUAL&&diffs[pointer+1][0]==DIFF_EQUAL){var equality1=diffs[pointer-1][1];var edit=diffs[pointer][1];var equality2=diffs[pointer+1][1];var commonOffset=this.diff_commonSuffix(equality1,edit);if(commonOffset){var commonString=edit.substring(edit.length-commonOffset);equality1=equality1.substring(0,equality1.length-commonOffset);edit=commonString+edit.substring(0,edit.length-commonOffset);equality2=commonString+equality2}var bestEquality1=equality1;var bestEdit=edit;var bestEquality2=equality2;var bestScore=diff_cleanupSemanticScore(equality1,edit)+diff_cleanupSemanticScore(edit,equality2);while(edit.charAt(0)===equality2.charAt(0)){equality1+=edit.charAt(0);edit=edit.substring(1)+equality2.charAt(0);equality2=equality2.substring(1);var score=diff_cleanupSemanticScore(equality1,edit)+diff_cleanupSemanticScore(edit,equality2);if(score>=bestScore){bestScore=score;bestEquality1=equality1;bestEdit=edit;bestEquality2=equality2}}if(diffs[pointer-1][1]!=bestEquality1){if(bestEquality1){diffs[pointer-1][1]=bestEquality1}else{diffs.splice(pointer-1,1);pointer--}diffs[pointer][1]=bestEdit;if(bestEquality2){diffs[pointer+1][1]=bestEquality2}else{diffs.splice(pointer+1,1);pointer--}}}pointer++}};diff_match_patch.prototype.diff_cleanupEfficiency=function(diffs){var changes=false;var equalities=[];var equalitiesLength=0;var lastequality='';var pointer=0;var pre_ins=false;var pre_del=false;var post_ins=false;var post_del=false;while(pointer<diffs.length){if(diffs[pointer][0]==DIFF_EQUAL){if(diffs[pointer][1].length<this.Diff_EditCost&&(post_ins||post_del)){equalities[equalitiesLength++]=pointer;pre_ins=post_ins;pre_del=post_del;lastequality=diffs[pointer][1]}else{equalitiesLength=0;lastequality=''}post_ins=post_del=false}else{if(diffs[pointer][0]==DIFF_DELETE){post_del=true}else{post_ins=true}if(lastequality&&((pre_ins&&pre_del&&post_ins&&post_del)||((lastequality.length<this.Diff_EditCost/2)&&(pre_ins+pre_del+post_ins+post_del)==3))){diffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]);diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT;equalitiesLength--;lastequality='';if(pre_ins&&pre_del){post_ins=post_del=true;equalitiesLength=0}else{equalitiesLength--;pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1;post_ins=post_del=false}changes=true}}pointer++}if(changes){this.diff_cleanupMerge(diffs)}};diff_match_patch.prototype.diff_cleanupMerge=function(diffs){diffs.push([DIFF_EQUAL,'']);var pointer=0;var count_delete=0;var count_insert=0;var text_delete='';var text_insert='';var commonlength;while(pointer<diffs.length){switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++;text_insert+=diffs[pointer][1];pointer++;break;case DIFF_DELETE:count_delete++;text_delete+=diffs[pointer][1];pointer++;break;case DIFF_EQUAL:if(count_delete!==0||count_insert!==0){if(count_delete!==0&&count_insert!==0){commonlength=this.diff_commonPrefix(text_insert,text_delete);if(commonlength!==0){if((pointer-count_delete-count_insert)>0&&diffs[pointer-count_delete-count_insert-1][0]==DIFF_EQUAL){diffs[pointer-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength)}else{diffs.splice(0,0,[DIFF_EQUAL,text_insert.substring(0,commonlength)]);pointer++}text_insert=text_insert.substring(commonlength);text_delete=text_delete.substring(commonlength)}commonlength=this.diff_commonSuffix(text_insert,text_delete);if(commonlength!==0){diffs[pointer][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer][1];text_insert=text_insert.substring(0,text_insert.length-commonlength);text_delete=text_delete.substring(0,text_delete.length-commonlength)}}if(count_delete===0){diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert,[DIFF_INSERT,text_insert])}else if(count_insert===0){diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert,[DIFF_DELETE,text_delete])}else{diffs.splice(pointer-count_delete-count_insert,count_delete+count_insert,[DIFF_DELETE,text_delete],[DIFF_INSERT,text_insert])}pointer=pointer-count_delete-count_insert+(count_delete?1:0)+(count_insert?1:0)+1}else if(pointer!==0&&diffs[pointer-1][0]==DIFF_EQUAL){diffs[pointer-1][1]+=diffs[pointer][1];diffs.splice(pointer,1)}else{pointer++}count_insert=0;count_delete=0;text_delete='';text_insert='';break}}if(diffs[diffs.length-1][1]===''){diffs.pop()}var changes=false;pointer=1;while(pointer<diffs.length-1){if(diffs[pointer-1][0]==DIFF_EQUAL&&diffs[pointer+1][0]==DIFF_EQUAL){if(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)==diffs[pointer-1][1]){diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length);diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1];diffs.splice(pointer-1,1);changes=true}else if(diffs[pointer][1].substring(0,diffs[pointer+1][1].length)==diffs[pointer+1][1]){diffs[pointer-1][1]+=diffs[pointer+1][1];diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1];diffs.splice(pointer+1,1);changes=true}}pointer++}if(changes){this.diff_cleanupMerge(diffs)}};diff_match_patch.prototype.diff_xIndex=function(diffs,loc){var chars1=0;var chars2=0;var last_chars1=0;var last_chars2=0;var x;for(x=0;x<diffs.length;x++){if(diffs[x][0]!==DIFF_INSERT){chars1+=diffs[x][1].length}if(diffs[x][0]!==DIFF_DELETE){chars2+=diffs[x][1].length}if(chars1>loc){break}last_chars1=chars1;last_chars2=chars2}if(diffs.length!=x&&diffs[x][0]===DIFF_DELETE){return last_chars2}return last_chars2+(loc-last_chars1)};diff_match_patch.prototype.diff_prettyHtml=function(diffs){var html=[];var i=0;for(var x=0;x<diffs.length;x++){var op=diffs[x][0];var data=diffs[x][1];var text=data.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\n/g,'&para;<BR>');switch(op){case DIFF_INSERT:html[x]='<INS STYLE="background:#E6FFE6;" TITLE="i='+i+'">'+text+'</INS>';break;case DIFF_DELETE:html[x]='<DEL STYLE="background:#FFE6E6;" TITLE="i='+i+'">'+text+'</DEL>';break;case DIFF_EQUAL:html[x]='<SPAN TITLE="i='+i+'">'+text+'</SPAN>';break}if(op!==DIFF_DELETE){i+=data.length}}return html.join('')};diff_match_patch.prototype.diff_text1=function(diffs){var text=[];for(var x=0;x<diffs.length;x++){if(diffs[x][0]!==DIFF_INSERT){text[x]=diffs[x][1]}}return text.join('')};diff_match_patch.prototype.diff_text2=function(diffs){var text=[];for(var x=0;x<diffs.length;x++){if(diffs[x][0]!==DIFF_DELETE){text[x]=diffs[x][1]}}return text.join('')};diff_match_patch.prototype.diff_levenshtein=function(diffs){var levenshtein=0;var insertions=0;var deletions=0;for(var x=0;x<diffs.length;x++){var op=diffs[x][0];var data=diffs[x][1];switch(op){case DIFF_INSERT:insertions+=data.length;break;case DIFF_DELETE:deletions+=data.length;break;case DIFF_EQUAL:levenshtein+=Math.max(insertions,deletions);insertions=0;deletions=0;break}}levenshtein+=Math.max(insertions,deletions);return levenshtein};diff_match_patch.prototype.diff_toDelta=function(diffs){var text=[];for(var x=0;x<diffs.length;x++){switch(diffs[x][0]){case DIFF_INSERT:text[x]='+'+encodeURI(diffs[x][1]);break;case DIFF_DELETE:text[x]='-'+diffs[x][1].length;break;case DIFF_EQUAL:text[x]='='+diffs[x][1].length;break}}return text.join('\t').replace(/\x00/g,'%00').replace(/%20/g,' ')};diff_match_patch.prototype.diff_fromDelta=function(text1,delta){var diffs=[];var diffsLength=0;var pointer=0;delta=delta.replace(/%00/g,'\0');var tokens=delta.split(/\t/g);for(var x=0;x<tokens.length;x++){var param=tokens[x].substring(1);switch(tokens[x].charAt(0)){case'+':try{diffs[diffsLength++]=[DIFF_INSERT,decodeURI(param)]}catch(ex){throw new Error('Illegal escape in diff_fromDelta: '+param);}break;case'-':case'=':var n=parseInt(param,10);if(isNaN(n)||n<0){throw new Error('Invalid number in diff_fromDelta: '+param);}var text=text1.substring(pointer,pointer+=n);if(tokens[x].charAt(0)=='='){diffs[diffsLength++]=[DIFF_EQUAL,text]}else{diffs[diffsLength++]=[DIFF_DELETE,text]}break;default:if(tokens[x]){throw new Error('Invalid diff operation in diff_fromDelta: '+tokens[x]);}}}if(pointer!=text1.length){throw new Error('Delta length ('+pointer+') does not equal source text length ('+text1.length+').');}return diffs};diff_match_patch.prototype.match_main=function(text,pattern,loc){loc=Math.max(0,Math.min(loc,text.length));if(text==pattern){return 0}else if(!text.length){return-1}else if(text.substring(loc,loc+pattern.length)==pattern){return loc}else{return this.match_bitap(text,pattern,loc)}};diff_match_patch.prototype.match_bitap=function(text,pattern,loc){if(pattern.length>this.Match_MaxBits){throw new Error('Pattern too long for this browser.');}var s=this.match_alphabet(pattern);var dmp=this;function match_bitapScore(e,x){var accuracy=e/pattern.length;var proximity=Math.abs(loc-x);if(!dmp.Match_Distance){return proximity?1.0:accuracy}return accuracy+(proximity/dmp.Match_Distance)}var score_threshold=this.Match_Threshold;var best_loc=text.indexOf(pattern,loc);if(best_loc!=-1){score_threshold=Math.min(match_bitapScore(0,best_loc),score_threshold)}best_loc=text.lastIndexOf(pattern,loc+pattern.length);if(best_loc!=-1){score_threshold=Math.min(match_bitapScore(0,best_loc),score_threshold)}var matchmask=1<<(pattern.length-1);best_loc=-1;var bin_min,bin_mid;var bin_max=pattern.length+text.length;var last_rd;for(var d=0;d<pattern.length;d++){bin_min=0;bin_mid=bin_max;while(bin_min<bin_mid){if(match_bitapScore(d,loc+bin_mid)<=score_threshold){bin_min=bin_mid}else{bin_max=bin_mid}bin_mid=Math.floor((bin_max-bin_min)/2+bin_min)}bin_max=bin_mid;var start=Math.max(1,loc-bin_mid+1);var finish=Math.min(loc+bin_mid,text.length)+pattern.length;var rd=Array(finish+2);rd[finish+1]=(1<<d)-1;for(var j=finish;j>=start;j--){var charMatch=s[text.charAt(j-1)];if(d===0){rd[j]=((rd[j+1]<<1)|1)&charMatch}else{rd[j]=((rd[j+1]<<1)|1)&charMatch|(((last_rd[j+1]|last_rd[j])<<1)|1)|last_rd[j+1]}if(rd[j]&matchmask){var score=match_bitapScore(d,j-1);if(score<=score_threshold){score_threshold=score;best_loc=j-1;if(best_loc>loc){start=Math.max(1,2*loc-best_loc)}else{break}}}}if(match_bitapScore(d+1,loc)>score_threshold){break}last_rd=rd}return best_loc};diff_match_patch.prototype.match_alphabet=function(pattern){var s={};for(var i=0;i<pattern.length;i++){s[pattern.charAt(i)]=0}for(var i=0;i<pattern.length;i++){s[pattern.charAt(i)]|=1<<(pattern.length-i-1)}return s};diff_match_patch.prototype.patch_addContext=function(patch,text){var pattern=text.substring(patch.start2,patch.start2+patch.length1);var padding=0;while(text.indexOf(pattern)!=text.lastIndexOf(pattern)&&pattern.length<this.Match_MaxBits-this.Patch_Margin-this.Patch_Margin){padding+=this.Patch_Margin;pattern=text.substring(patch.start2-padding,patch.start2+patch.length1+padding)}padding+=this.Patch_Margin;var prefix=text.substring(patch.start2-padding,patch.start2);if(prefix){patch.diffs.unshift([DIFF_EQUAL,prefix])}var suffix=text.substring(patch.start2+patch.length1,patch.start2+patch.length1+padding);if(suffix){patch.diffs.push([DIFF_EQUAL,suffix])}patch.start1-=prefix.length;patch.start2-=prefix.length;patch.length1+=prefix.length+suffix.length;patch.length2+=prefix.length+suffix.length};diff_match_patch.prototype.patch_make=function(a,opt_b,opt_c){var text1,diffs;if(typeof a=='string'&&typeof opt_b=='string'&&typeof opt_c=='undefined'){text1=a;diffs=this.diff_main(text1,opt_b,true);if(diffs.length>2){this.diff_cleanupSemantic(diffs);this.diff_cleanupEfficiency(diffs)}}else if(typeof a=='object'&&typeof opt_b=='undefined'&&typeof opt_c=='undefined'){diffs=a;text1=this.diff_text1(diffs)}else if(typeof a=='string'&&typeof opt_b=='object'&&typeof opt_c=='undefined'){text1=a;diffs=opt_b}else if(typeof a=='string'&&typeof opt_b=='string'&&typeof opt_c=='object'){text1=a;diffs=opt_c}else{throw new Error('Unknown call format to patch_make.');}if(diffs.length===0){return[]}var patches=[];var patch=new patch_obj();var patchDiffLength=0;var char_count1=0;var char_count2=0;var prepatch_text=text1;var postpatch_text=text1;for(var x=0;x<diffs.length;x++){var diff_type=diffs[x][0];var diff_text=diffs[x][1];if(!patchDiffLength&&diff_type!==DIFF_EQUAL){patch.start1=char_count1;patch.start2=char_count2}switch(diff_type){case DIFF_INSERT:patch.diffs[patchDiffLength++]=diffs[x];patch.length2+=diff_text.length;postpatch_text=postpatch_text.substring(0,char_count2)+diff_text+postpatch_text.substring(char_count2);break;case DIFF_DELETE:patch.length1+=diff_text.length;patch.diffs[patchDiffLength++]=diffs[x];postpatch_text=postpatch_text.substring(0,char_count2)+postpatch_text.substring(char_count2+diff_text.length);break;case DIFF_EQUAL:if(diff_text.length<=2*this.Patch_Margin&&patchDiffLength&&diffs.length!=x+1){patch.diffs[patchDiffLength++]=diffs[x];patch.length1+=diff_text.length;patch.length2+=diff_text.length}else if(diff_text.length>=2*this.Patch_Margin){if(patchDiffLength){this.patch_addContext(patch,prepatch_text);patches.push(patch);patch=new patch_obj();patchDiffLength=0;prepatch_text=postpatch_text;char_count1=char_count2}}break}if(diff_type!==DIFF_INSERT){char_count1+=diff_text.length}if(diff_type!==DIFF_DELETE){char_count2+=diff_text.length}}if(patchDiffLength){this.patch_addContext(patch,prepatch_text);patches.push(patch)}return patches};diff_match_patch.prototype.patch_deepCopy=function(patches){var patchesCopy=[];for(var x=0;x<patches.length;x++){var patch=patches[x];var patchCopy=new patch_obj();patchCopy.diffs=[];for(var y=0;y<patch.diffs.length;y++){patchCopy.diffs[y]=patch.diffs[y].slice()}patchCopy.start1=patch.start1;patchCopy.start2=patch.start2;patchCopy.length1=patch.length1;patchCopy.length2=patch.length2;patchesCopy[x]=patchCopy}return patchesCopy};diff_match_patch.prototype.patch_apply=function(patches,text){if(patches.length==0){return[text,[]]}patches=this.patch_deepCopy(patches);var nullPadding=this.patch_addPadding(patches);text=nullPadding+text+nullPadding;this.patch_splitMax(patches);var delta=0;var results=[];for(var x=0;x<patches.length;x++){var expected_loc=patches[x].start2+delta;var text1=this.diff_text1(patches[x].diffs);var start_loc;var end_loc=-1;if(text1.length>this.Match_MaxBits){start_loc=this.match_main(text,text1.substring(0,this.Match_MaxBits),expected_loc);if(start_loc!=-1){end_loc=this.match_main(text,text1.substring(text1.length-this.Match_MaxBits),expected_loc+text1.length-this.Match_MaxBits);if(end_loc==-1||start_loc>=end_loc){start_loc=-1}}}else{start_loc=this.match_main(text,text1,expected_loc)}if(start_loc==-1){results[x]=false;delta-=patches[x].length2-patches[x].length1}else{results[x]=true;delta=start_loc-expected_loc;var text2;if(end_loc==-1){text2=text.substring(start_loc,start_loc+text1.length)}else{text2=text.substring(start_loc,end_loc+this.Match_MaxBits)}if(text1==text2){text=text.substring(0,start_loc)+this.diff_text2(patches[x].diffs)+text.substring(start_loc+text1.length)}else{var diffs=this.diff_main(text1,text2,false);if(text1.length>this.Match_MaxBits&&this.diff_levenshtein(diffs)/text1.length>this.Patch_DeleteThreshold){results[x]=false}else{this.diff_cleanupSemanticLossless(diffs);var index1=0;var index2;for(var y=0;y<patches[x].diffs.length;y++){var mod=patches[x].diffs[y];if(mod[0]!==DIFF_EQUAL){index2=this.diff_xIndex(diffs,index1)}if(mod[0]===DIFF_INSERT){text=text.substring(0,start_loc+index2)+mod[1]+text.substring(start_loc+index2)}else if(mod[0]===DIFF_DELETE){text=text.substring(0,start_loc+index2)+text.substring(start_loc+this.diff_xIndex(diffs,index1+mod[1].length))}if(mod[0]!==DIFF_DELETE){index1+=mod[1].length}}}}}}text=text.substring(nullPadding.length,text.length-nullPadding.length);return[text,results]};diff_match_patch.prototype.patch_addPadding=function(patches){var paddingLength=this.Patch_Margin;var nullPadding='';for(var x=1;x<=paddingLength;x++){nullPadding+=String.fromCharCode(x)}for(var x=0;x<patches.length;x++){patches[x].start1+=paddingLength;patches[x].start2+=paddingLength}var patch=patches[0];var diffs=patch.diffs;if(diffs.length==0||diffs[0][0]!=DIFF_EQUAL){diffs.unshift([DIFF_EQUAL,nullPadding]);patch.start1-=paddingLength;patch.start2-=paddingLength;patch.length1+=paddingLength;patch.length2+=paddingLength}else if(paddingLength>diffs[0][1].length){var extraLength=paddingLength-diffs[0][1].length;diffs[0][1]=nullPadding.substring(diffs[0][1].length)+diffs[0][1];patch.start1-=extraLength;patch.start2-=extraLength;patch.length1+=extraLength;patch.length2+=extraLength}patch=patches[patches.length-1];diffs=patch.diffs;if(diffs.length==0||diffs[diffs.length-1][0]!=DIFF_EQUAL){diffs.push([DIFF_EQUAL,nullPadding]);patch.length1+=paddingLength;patch.length2+=paddingLength}else if(paddingLength>diffs[diffs.length-1][1].length){var extraLength=paddingLength-diffs[diffs.length-1][1].length;diffs[diffs.length-1][1]+=nullPadding.substring(0,extraLength);patch.length1+=extraLength;patch.length2+=extraLength}return nullPadding};diff_match_patch.prototype.patch_splitMax=function(patches){for(var x=0;x<patches.length;x++){if(patches[x].length1>this.Match_MaxBits){var bigpatch=patches[x];patches.splice(x--,1);var patch_size=this.Match_MaxBits;var start1=bigpatch.start1;var start2=bigpatch.start2;var precontext='';while(bigpatch.diffs.length!==0){var patch=new patch_obj();var empty=true;patch.start1=start1-precontext.length;patch.start2=start2-precontext.length;if(precontext!==''){patch.length1=patch.length2=precontext.length;patch.diffs.push([DIFF_EQUAL,precontext])}while(bigpatch.diffs.length!==0&&patch.length1<patch_size-this.Patch_Margin){var diff_type=bigpatch.diffs[0][0];var diff_text=bigpatch.diffs[0][1];if(diff_type===DIFF_INSERT){patch.length2+=diff_text.length;start2+=diff_text.length;patch.diffs.push(bigpatch.diffs.shift());empty=false}else if(diff_type===DIFF_DELETE&&patch.diffs.length==1&&patch.diffs[0][0]==DIFF_EQUAL&&diff_text.length>2*patch_size){patch.length1+=diff_text.length;start1+=diff_text.length;empty=false;patch.diffs.push([diff_type,diff_text]);bigpatch.diffs.shift()}else{diff_text=diff_text.substring(0,patch_size-patch.length1-this.Patch_Margin);patch.length1+=diff_text.length;start1+=diff_text.length;if(diff_type===DIFF_EQUAL){patch.length2+=diff_text.length;start2+=diff_text.length}else{empty=false}patch.diffs.push([diff_type,diff_text]);if(diff_text==bigpatch.diffs[0][1]){bigpatch.diffs.shift()}else{bigpatch.diffs[0][1]=bigpatch.diffs[0][1].substring(diff_text.length)}}}precontext=this.diff_text2(patch.diffs);precontext=precontext.substring(precontext.length-this.Patch_Margin);var postcontext=this.diff_text1(bigpatch.diffs).substring(0,this.Patch_Margin);if(postcontext!==''){patch.length1+=postcontext.length;patch.length2+=postcontext.length;if(patch.diffs.length!==0&&patch.diffs[patch.diffs.length-1][0]===DIFF_EQUAL){patch.diffs[patch.diffs.length-1][1]+=postcontext}else{patch.diffs.push([DIFF_EQUAL,postcontext])}}if(!empty){patches.splice(++x,0,patch)}}}}};diff_match_patch.prototype.patch_toText=function(patches){var text=[];for(var x=0;x<patches.length;x++){text[x]=patches[x]}return text.join('')};diff_match_patch.prototype.patch_fromText=function(textline){var patches=[];if(!textline){return patches}textline=textline.replace(/%00/g,'\0');var text=textline.split('\n');var textPointer=0;while(textPointer<text.length){var m=text[textPointer].match(/^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/);if(!m){throw new Error('Invalid patch string: '+text[textPointer]);}var patch=new patch_obj();patches.push(patch);patch.start1=parseInt(m[1],10);if(m[2]===''){patch.start1--;patch.length1=1}else if(m[2]=='0'){patch.length1=0}else{patch.start1--;patch.length1=parseInt(m[2],10)}patch.start2=parseInt(m[3],10);if(m[4]===''){patch.start2--;patch.length2=1}else if(m[4]=='0'){patch.length2=0}else{patch.start2--;patch.length2=parseInt(m[4],10)}textPointer++;while(textPointer<text.length){var sign=text[textPointer].charAt(0);try{var line=decodeURI(text[textPointer].substring(1))}catch(ex){throw new Error('Illegal escape in patch_fromText: '+line);}if(sign=='-'){patch.diffs.push([DIFF_DELETE,line])}else if(sign=='+'){patch.diffs.push([DIFF_INSERT,line])}else if(sign==' '){patch.diffs.push([DIFF_EQUAL,line])}else if(sign=='@'){break}else if(sign===''){}else{throw new Error('Invalid patch mode "'+sign+'" in: '+line);}textPointer++}}return patches};function patch_obj(){this.diffs=[];this.start1=null;this.start2=null;this.length1=0;this.length2=0}patch_obj.prototype.toString=function(){var coords1,coords2;if(this.length1===0){coords1=this.start1+',0'}else if(this.length1==1){coords1=this.start1+1}else{coords1=(this.start1+1)+','+this.length1}if(this.length2===0){coords2=this.start2+',0'}else if(this.length2==1){coords2=this.start2+1}else{coords2=(this.start2+1)+','+this.length2}var text=['@@ -'+coords1+' +'+coords2+' @@\n'];var op;for(var x=0;x<this.diffs.length;x++){switch(this.diffs[x][0]){case DIFF_INSERT:op='+';break;case DIFF_DELETE:op='-';break;case DIFF_EQUAL:op=' ';break}text[x+1]=op+encodeURI(this.diffs[x][1])+'\n'}return text.join('').replace(/\x00/g,'%00').replace(/%20/g,' ')};var mobwrite={};mobwrite.syncGateway='/admin/theme/scripts/q.php';mobwrite.get_maxchars=1000;mobwrite.debug=false;if(!('console'in window)||!('info'in window.console)||!('warn'in window.console)||!('error'in window.console)){mobwrite.debug=false}mobwrite.sniffUserAgent=function(){if(window.opera){mobwrite.UA_opera=true}else{var UA=navigator.userAgent.toLowerCase();mobwrite.UA_webkit=UA.indexOf('webkit')!=-1;if(!mobwrite.UA_webkit){mobwrite.UA_gecko=UA.indexOf('gecko')!=-1;if(!mobwrite.UA_gecko){mobwrite.UA_msie=UA.indexOf('msie')!=-1}}}};mobwrite.UA_gecko=false;mobwrite.UA_opera=false;mobwrite.UA_msie=false;mobwrite.UA_webkit=false;mobwrite.sniffUserAgent();mobwrite.syncRunPid_=null;mobwrite.syncKillPid_=null;mobwrite.timeoutInterval=30000;mobwrite.minSyncInterval=1000;mobwrite.maxSyncInterval=10000;mobwrite.syncInterval=2000;mobwrite.idPrefix='';mobwrite.nullifyAll=false;mobwrite.clientChange_=false;mobwrite.serverChange_=false;mobwrite.syncAjaxObj_=null;mobwrite.uniqueId=function(){var soup='abcdefghijklmnopqrstuvwxyz';var id=soup.charAt(Math.random()*soup.length);soup+='0123456789-_:.';for(var x=1;x<8;x++){id+=soup.charAt(Math.random()*soup.length)}if(id.indexOf('--')!=-1){id=mobwrite.uniqueId()}return id};mobwrite.syncUsername=mobwrite.uniqueId();mobwrite.shared={};mobwrite.shareHandlers=[];mobwrite.shareObj=function(id){if(id){this.file=id;this.dmp=new diff_match_patch();this.dmp.Diff_Timeout=0.5;this.editStack=[];if(mobwrite.debug){window.console.info('Creating shareObj: "'+id+'"')}}};mobwrite.shareObj.prototype.shadowText='';mobwrite.shareObj.prototype.clientVersion=0;mobwrite.shareObj.prototype.serverVersion=0;mobwrite.shareObj.prototype.deltaOk=false;mobwrite.shareObj.prototype.mergeChanges=true;mobwrite.shareObj.prototype.getClientText=function(){window.alert('Defined by subclass');return''};mobwrite.shareObj.prototype.setClientText=function(text){window.alert('Defined by subclass')};mobwrite.shareObj.prototype.patchClientText=function(patches){var oldClientText=this.getClientText();var result=this.dmp.patch_apply(patches,oldClientText);if(oldClientText!=result[0]){this.setClientText(result[0])}};mobwrite.shareObj.prototype.onSentDiff=function(diffs){};mobwrite.shareObj.prototype.fireChange=function(target){if('createEvent'in document){var e=document.createEvent('HTMLEvents');e.initEvent('change',false,false);target.dispatchEvent(e)}else if('fireEvent'in target){target.fireEvent('onchange')}};mobwrite.shareObj.prototype.nullify=function(){mobwrite.unshare(this.file);return'N:'+mobwrite.idPrefix+this.file+'\n'};mobwrite.shareObj.prototype.syncText=function(){var clientText=this.getClientText();if(this.deltaOk){var diffs=this.dmp.diff_main(this.shadowText,clientText,true);if(diffs.length>2){this.dmp.diff_cleanupSemantic(diffs);this.dmp.diff_cleanupEfficiency(diffs)}var changed=diffs.length!=1||diffs[0][0]!=DIFF_EQUAL;if(changed){mobwrite.clientChange_=true;this.shadowText=clientText}if(changed||!this.editStack.length){var action=(this.mergeChanges?'d:':'D:')+this.clientVersion+':'+this.dmp.diff_toDelta(diffs);this.editStack.push([this.clientVersion,action]);this.clientVersion++;this.onSentDiff(diffs)}}else{if(this.shadowText!=clientText){this.shadowText=clientText}this.clientVersion++;var action='r:'+this.clientVersion+':'+encodeURI(clientText).replace(/%20/g,' ');this.editStack.push([this.clientVersion,action]);this.deltaOk=true}var data='F:'+this.serverVersion+':'+mobwrite.idPrefix+this.file+'\n';for(var x=0;x<this.editStack.length;x++){data+=this.editStack[x][1]+'\n'}return data.replace(/\x00/g,'%00')};mobwrite.syncRun1_=function(){mobwrite.clientChange_=false;var data=[];data[0]='u:'+mobwrite.syncUsername+'\n';var empty=true;for(var x in mobwrite.shared){if(mobwrite.shared.hasOwnProperty(x)){if(mobwrite.nullifyAll){data.push(mobwrite.shared[x].nullify())}else{data.push(mobwrite.shared[x].syncText())}empty=false}}if(empty){if(mobwrite.debug){window.console.info('MobWrite task stopped.')}return}if(data.length==1){if(mobwrite.debug){window.console.info('All objects silent; null sync.')}mobwrite.syncRun2_('\n\n');return}var remote=(mobwrite.syncGateway.indexOf('://')!=-1);if(mobwrite.debug){window.console.info('TO server:\n'+data.join(''))}data.push('\n');data=data.join('');mobwrite.syncKillPid_=window.setTimeout(mobwrite.syncKill_,mobwrite.timeoutInterval);if(remote){var blocks=mobwrite.splitBlocks_(data);var head=document.getElementsByTagName('head')[0];for(var x=0;x<blocks.length;x++){var script=document.getElementById('mobwrite_sync'+x);if(script){script.parentNode.removeChild(script);if(!mobwrite.UA_msie){for(var prop in script){delete script[prop]}script=null}}if(!script){script=document.createElement('script');script.type='text/javascript';script.charset='utf-8';script.id='mobwrite_sync'+x}script.src=blocks[x];head.appendChild(script)}}else{data='q='+encodeURIComponent(data);mobwrite.syncAjaxObj_=mobwrite.syncLoadAjax_(mobwrite.syncGateway,data,mobwrite.syncCheckAjax_)}};mobwrite.splitBlocks_=function(data,opt_minBlocks){var encData=encodeURIComponent(data);var prefix=mobwrite.syncGateway+'?p=';var maxchars=mobwrite.get_maxchars-prefix.length;var encPlusData=encData.replace(/%20/g,'+');if(encPlusData.length<=maxchars){return[prefix+encPlusData]}var digits=1;if(typeof opt_minBlocks!='undefined'){digits=String(opt_minBlocks).length}var blocks=[];var encEncData=encodeURIComponent(encData);var id=mobwrite.uniqueId();var paddingSize=(prefix+'b%3A'+id+'+++'+'%0A%0A').length+2*digits;var blockLength=mobwrite.get_maxchars-paddingSize;if(blockLength<3){if(mobwrite.debug){window.console.error('mobwrite.get_maxchars too small to send data.')}blockLength=3}var bufferBlocks=Math.ceil(encEncData.length/blockLength);if(typeof opt_minBlocks!='undefined'){bufferBlocks=Math.max(bufferBlocks,opt_minBlocks)}var bufferHeader='b%3A'+id+'+'+encodeURIComponent(bufferBlocks)+'+';var startPointer=0;for(var x=1;x<=bufferBlocks;x++){var endPointer=startPointer+blockLength;if(encEncData.charAt(endPointer-1)=='%'){endPointer-=1}else if(encEncData.charAt(endPointer-2)=='%'){endPointer-=2}var bufferData=encEncData.substring(startPointer,endPointer);blocks.push(prefix+bufferHeader+x+'+'+bufferData+'%0A%0A');startPointer=endPointer}if(startPointer<encEncData.length){if(mobwrite.debug){window.console.debug('Recursing splitBlocks_ at n='+(bufferBlocks+1))}return this.splitBlocks_(data,bufferBlocks+1)}return blocks};mobwrite.callback=function(text){if(text){mobwrite.syncRun2_(text+'\n')}else{window.clearTimeout(mobwrite.syncKillPid_);mobwrite.syncKillPid_=window.setTimeout(mobwrite.syncKill_,mobwrite.timeoutInterval)}};mobwrite.syncRun2_=function(text){mobwrite.serverChange_=false;if(mobwrite.debug){window.console.info('FROM server:\n'+text)}text=text.replace(/%00/g,'\0');if(text.length<2||text.substring(text.length-2)!='\n\n'){text='';if(mobwrite.error){window.console.info('Truncated data.  Abort.')}}var lines=text.split('\n');var file=null;var clientVersion=null;for(var i=0;i<lines.length;i++){var line=lines[i];if(!line){break}if(line.charAt(1)!=':'){if(mobwrite.debug){window.console.error('Unparsable line: '+line)}continue}var name=line.charAt(0);var value=line.substring(2);var version;if('FfDdRr'.indexOf(name)!=-1){var div=value.indexOf(':');if(div<1){if(mobwrite.debug){window.console.error('No version number: '+line)}continue}version=parseInt(value.substring(0,div),10);if(isNaN(version)){if(mobwrite.debug){window.console.error('NaN version number: '+line)}continue}value=value.substring(div+1)}if(name=='F'||name=='f'){if(value.substring(0,mobwrite.idPrefix.length)==mobwrite.idPrefix){value=value.substring(mobwrite.idPrefix.length)}else{file=null;if(mobwrite.debug){window.console.error('File does not have "'+mobwrite.idPrefix+'" prefix: '+value)}continue}if(mobwrite.shared.hasOwnProperty(value)){file=mobwrite.shared[value];file.deltaOk=true;clientVersion=version;for(var x=0;x<file.editStack.length;x++){if(file.editStack[x][0]<=clientVersion){file.editStack.splice(x,1);x--}}}else{file=null;if(mobwrite.debug){window.console.error('Unknown file: '+value)}}}else if(name=='R'||name=='r'){if(file){file.shadowText=decodeURI(value);file.clientVersion=clientVersion;file.serverVersion=version;file.editStack=[];if(name=='R'){file.setClientText(file.shadowText)}mobwrite.serverChange_=true}}else if(name=='D'||name=='d'){if(file){if(clientVersion!=file.clientVersion){file.deltaOk=false;if(mobwrite.debug){window.console.error('Client version number mismatch.\n'+'Expected: '+file.clientVersion+' Got: '+clientVersion)}}else if(version>file.serverVersion){file.deltaOk=false;if(mobwrite.debug){window.console.error('Server version in future.\n'+'Expected: '+file.serverVersion+' Got: '+version)}}else if(version<file.serverVersion){if(mobwrite.debug){window.console.warn('Server version in past.\n'+'Expected: '+file.serverVersion+' Got: '+version)}}else{var diffs;try{diffs=file.dmp.diff_fromDelta(file.shadowText,value);file.serverVersion++}catch(ex){diffs=null;file.deltaOk=false;mobwrite.syncInterval=0;if(mobwrite.debug){window.console.error('Delta mismatch.\n'+encodeURI(file.shadowText))}}if(diffs&&(diffs.length!=1||diffs[0][0]!=DIFF_EQUAL)){if(name=='D'){file.shadowText=file.dmp.diff_text2(diffs);file.setClientText(file.shadowText)}else{var patches=file.dmp.patch_make(file.shadowText,diffs);var serverResult=file.dmp.patch_apply(patches,file.shadowText);file.shadowText=serverResult[0];file.patchClientText(patches)}mobwrite.serverChange_=true}}}}}mobwrite.computeSyncInterval_();window.clearTimeout(mobwrite.syncRunPid_);mobwrite.syncRunPid_=window.setTimeout(mobwrite.syncRun1_,mobwrite.syncInterval);window.clearTimeout(mobwrite.syncKillPid_);mobwrite.syncKillPid_=null};mobwrite.computeSyncInterval_=function(){var range=mobwrite.maxSyncInterval-mobwrite.minSyncInterval;if(mobwrite.clientChange_){mobwrite.syncInterval-=range*0.4}if(mobwrite.serverChange_){mobwrite.syncInterval-=range*0.2}if(!mobwrite.clientChange_&&!mobwrite.serverChange_){mobwrite.syncInterval+=range*0.1}mobwrite.syncInterval=Math.max(mobwrite.minSyncInterval,mobwrite.syncInterval);mobwrite.syncInterval=Math.min(mobwrite.maxSyncInterval,mobwrite.syncInterval)};mobwrite.syncKill_=function(){mobwrite.syncKillPid_=null;if(mobwrite.syncAjaxObj_){mobwrite.syncAjaxObj_.abort();mobwrite.syncAjaxObj_=null}if(mobwrite.debug){window.console.warn('Connection timeout.')}window.clearTimeout(mobwrite.syncRunPid_);mobwrite.syncRunPid_=window.setTimeout(mobwrite.syncRun1_,1)};mobwrite.syncLoadAjax_=function(url,post,callback){var req=null;if(window.XMLHttpRequest){try{req=new XMLHttpRequest()}catch(e1){req=null}}else if(window.ActiveXObject){try{req=new ActiveXObject('Msxml2.XMLHTTP')}catch(e2){try{req=new ActiveXObject('Microsoft.XMLHTTP')}catch(e3){req=null}}}if(req){req.onreadystatechange=callback;req.open('POST',url,true);req.setRequestHeader('Content-Type','application/x-www-form-urlencoded');req.send(post)}return req};mobwrite.syncCheckAjax_=function(){if(typeof mobwrite=='undefined'||!mobwrite.syncAjaxObj_){return}if(mobwrite.syncAjaxObj_.readyState==4){if(mobwrite.syncAjaxObj_.status==200){var text=mobwrite.syncAjaxObj_.responseText;mobwrite.syncAjaxObj_=null;mobwrite.syncRun2_(text)}else{if(mobwrite.debug){window.console.warn('Connection error code: '+mobwrite.syncAjaxObj_.status)}mobwrite.syncAjaxObj_=null}}};mobwrite.unload_=function(){if(!mobwrite.syncKillPid_){mobwrite.debug=false;mobwrite.syncRun1_()}};if(window.addEventListener){window.addEventListener('unload',mobwrite.unload_,false)}else if(window.attachEvent){window.attachEvent('onunload',mobwrite.unload_)}mobwrite.share=function(var_args){for(var i=0;i<arguments.length;i++){var el=arguments[i];var result=null;for(var x=0;x<mobwrite.shareHandlers.length&&!result;x++){result=mobwrite.shareHandlers[x].call(mobwrite,el)}if(result&&result.file){if(!result.file.match(/^[A-Za-z][-.:\w]*$/)){if(mobwrite.debug){window.console.error('Illegal id "'+result.file+'".')}continue}if(result.file in mobwrite.shared){if(mobwrite.debug){window.console.warn('Ignoring duplicate share on "'+el+'".')}continue}mobwrite.shared[result.file]=result;if(mobwrite.syncRunPid_===null){if(mobwrite.debug){window.console.info('MobWrite task started.')}}else{window.clearTimeout(mobwrite.syncRunPid_)}mobwrite.syncRunPid_=window.setTimeout(mobwrite.syncRun1_,10)}else{if(mobwrite.debug){window.console.warn('Share: Unknown widget type: '+el+'.')}}}};mobwrite.unshare=function(var_args){for(var i=0;i<arguments.length;i++){var el=arguments[i];if(typeof el=='string'&&mobwrite.shared.hasOwnProperty(el)){delete mobwrite.shared[el];if(mobwrite.debug){window.console.info('Unshared: '+el)}}else{var result=null;for(var x=0;x<mobwrite.shareHandlers.length&&!result;x++){result=mobwrite.shareHandlers[x].call(mobwrite,el)}if(result&&result.file){if(mobwrite.shared.hasOwnProperty(result.file)){delete mobwrite.shared[result.file];if(mobwrite.debug){window.console.info('Unshared: '+el)}}else{if(mobwrite.debug){window.console.warn('Ignoring '+el+'. Not currently shared.')}}}else{if(mobwrite.debug){window.console.warn('Unshare: Unknown widget type: '+el+'.')}}}}};mobwrite.validNode_=function(node){while(node.parentNode){node=node.parentNode}return node.nodeType==9};mobwrite.shareHandlerForm=function(form){if(typeof form=='string'){form=document.getElementById(form)||document.forms[form]}if(form&&'tagName'in form&&form.tagName=='FORM'){for(var x=0,el;el=form.elements[x];x++){mobwrite.share(el)}}return null};mobwrite.shareHandlers.push(mobwrite.shareHandlerForm);mobwrite.shareHiddenObj=function(node){mobwrite.shareObj.apply(this,[node.id]);this.element=node};mobwrite.shareHiddenObj.prototype=new mobwrite.shareObj('');mobwrite.shareHiddenObj.prototype.getClientText=function(){if(!mobwrite.validNode_(this.element)){mobwrite.unshare(this.file)}this.mergeChanges=!this.element.value.match(/^\s*-?[\d.]+\s*$/);return this.element.value};mobwrite.shareHiddenObj.prototype.setClientText=function(text){this.element.value=text};mobwrite.shareHiddenObj.shareHandler=function(node){if(typeof node=='string'){node=document.getElementById(node)}if(node&&'type'in node&&node.type=='hidden'){return new mobwrite.shareHiddenObj(node)}return null};mobwrite.shareHandlers.push(mobwrite.shareHiddenObj.shareHandler);mobwrite.shareCheckboxObj=function(node){mobwrite.shareObj.apply(this,[node.id]);this.element=node;this.mergeChanges=false};mobwrite.shareCheckboxObj.prototype=new mobwrite.shareObj('');mobwrite.shareCheckboxObj.prototype.getClientText=function(){if(!mobwrite.validNode_(this.element)){mobwrite.unshare(this.file)}return this.element.checked?this.element.value:''};mobwrite.shareCheckboxObj.prototype.setClientText=function(text){var value=this.element.value||'on';this.element.checked=(text==value);this.fireChange(this.element)};mobwrite.shareCheckboxObj.shareHandler=function(node){if(typeof node=='string'){node=document.getElementById(node)}if(node&&'type'in node&&node.type=='checkbox'){return new mobwrite.shareCheckboxObj(node)}return null};mobwrite.shareHandlers.push(mobwrite.shareCheckboxObj.shareHandler);mobwrite.shareSelectObj=function(node){mobwrite.shareObj.apply(this,[node.id]);this.element=node;this.mergeChanges=(node.type=='select-multiple')};mobwrite.shareSelectObj.prototype=new mobwrite.shareObj('');mobwrite.shareSelectObj.prototype.getClientText=function(){if(!mobwrite.validNode_(this.element)){mobwrite.unshare(this.file)}var selected=[];for(var x=0,option;option=this.element.options[x];x++){if(option.selected){selected.push(option.value)}}return selected.join('\0')};mobwrite.shareSelectObj.prototype.setClientText=function(text){text='\0'+text+'\0';for(var x=0,option;option=this.element.options[x];x++){option.selected=(text.indexOf('\0'+option.value+'\0')!=-1)}this.fireChange(this.element)};mobwrite.shareSelectObj.shareHandler=function(node){if(typeof node=='string'){node=document.getElementById(node)}if(node&&'type'in node&&(node.type=='select-one'||node.type=='select-multiple')){return new mobwrite.shareSelectObj(node)}return null};mobwrite.shareHandlers.push(mobwrite.shareSelectObj.shareHandler);mobwrite.shareRadioObj=function(node){mobwrite.shareObj.apply(this,[node.id]);this.elements=[node];this.form=node.form;this.name=node.name;this.mergeChanges=false};mobwrite.shareRadioObj.prototype=new mobwrite.shareObj('');mobwrite.shareRadioObj.prototype.getClientText=function(){if(!mobwrite.validNode_(this.elements[0])){mobwrite.unshare(this.file)}for(var x=0;x<this.elements.length;x++){if(this.elements[x].checked){return this.elements[x].value}}return''};mobwrite.shareRadioObj.prototype.setClientText=function(text){for(var x=0;x<this.elements.length;x++){this.elements[x].checked=(text==this.elements[x].value);this.fireChange(this.elements[x])}};mobwrite.shareRadioObj.shareHandler=function(node){if(typeof node=='string'){node=document.getElementById(node)}if(node&&'type'in node&&node.type=='radio'){for(var id in mobwrite.shared){if(mobwrite.shared[id].form==node.form&&mobwrite.shared[id].name==node.name){mobwrite.shared[id].elements.push(node);return null}}return new mobwrite.shareRadioObj(node)}return null};mobwrite.shareHandlers.push(mobwrite.shareRadioObj.shareHandler);mobwrite.shareTextareaObj=function(node){mobwrite.shareObj.apply(this,[node.id]);this.element=node;if(node.type=='password'){this.mergeChanges=false}};mobwrite.shareTextareaObj.prototype=new mobwrite.shareObj('');mobwrite.shareTextareaObj.prototype.getClientText=function(){if(!mobwrite.validNode_(this.element)){mobwrite.unshare(this.file)}var text=mobwrite.shareTextareaObj.normalizeLinebreaks_(this.element.value);if(this.element.type=='text'){this.mergeChanges=!text.match(/^\s*-?[\d.,]+\s*$/)}return text};mobwrite.shareTextareaObj.prototype.setClientText=function(text){this.element.value=text;this.fireChange(this.element)};mobwrite.shareTextareaObj.prototype.patchClientText=function(patches){this.dmp.Match_Distance=1000;this.dmp.Match_Threshold=0.6;var oldClientText=this.getClientText();var cursor=this.captureCursor_();var offsets=[];if(cursor){offsets[0]=cursor.startOffset;if('endOffset'in cursor){offsets[1]=cursor.endOffset}}var newClientText=this.patch_apply_(patches,oldClientText,offsets);if(oldClientText!=newClientText){this.setClientText(newClientText);if(cursor){cursor.startOffset=offsets[0];if(offsets.length>1){cursor.endOffset=offsets[1];if(cursor.startOffset>=cursor.endOffset){cursor.collapsed=true}}this.restoreCursor_(cursor)}}};mobwrite.shareTextareaObj.prototype.patch_apply_=function(patches,text,offsets){if(patches.length==0){return text}patches=this.dmp.patch_deepCopy(patches);var nullPadding=this.dmp.patch_addPadding(patches);text=nullPadding+text+nullPadding;this.dmp.patch_splitMax(patches);var delta=0;for(var x=0;x<patches.length;x++){var expected_loc=patches[x].start2+delta;var text1=this.dmp.diff_text1(patches[x].diffs);var start_loc;var end_loc=-1;if(text1.length>this.dmp.Match_MaxBits){start_loc=this.dmp.match_main(text,text1.substring(0,this.dmp.Match_MaxBits),expected_loc);if(start_loc!=-1){end_loc=this.dmp.match_main(text,text1.substring(text1.length-this.dmp.Match_MaxBits),expected_loc+text1.length-this.dmp.Match_MaxBits);if(end_loc==-1||start_loc>=end_loc){start_loc=-1}}}else{start_loc=this.dmp.match_main(text,text1,expected_loc)}if(start_loc==-1){if(mobwrite.debug){window.console.warn('Patch failed: '+patches[x])}delta-=patches[x].length2-patches[x].length1}else{if(mobwrite.debug){window.console.info('Patch OK.')}delta=start_loc-expected_loc;var text2;if(end_loc==-1){text2=text.substring(start_loc,start_loc+text1.length)}else{text2=text.substring(start_loc,end_loc+this.dmp.Match_MaxBits)}var diffs=this.dmp.diff_main(text1,text2,false);if(text1.length>this.dmp.Match_MaxBits&&this.dmp.diff_levenshtein(diffs)/text1.length>this.dmp.Patch_DeleteThreshold){if(mobwrite.debug){window.console.warn('Patch contents mismatch: '+patches[x])}}else{var index1=0;var index2;for(var y=0;y<patches[x].diffs.length;y++){var mod=patches[x].diffs[y];if(mod[0]!==DIFF_EQUAL){index2=this.dmp.diff_xIndex(diffs,index1)}if(mod[0]===DIFF_INSERT){text=text.substring(0,start_loc+index2)+mod[1]+text.substring(start_loc+index2);for(var i=0;i<offsets.length;i++){if(offsets[i]+nullPadding.length>start_loc+index2){offsets[i]+=mod[1].length}}}else if(mod[0]===DIFF_DELETE){var del_start=start_loc+index2;var del_end=start_loc+this.dmp.diff_xIndex(diffs,index1+mod[1].length);text=text.substring(0,del_start)+text.substring(del_end);for(var i=0;i<offsets.length;i++){if(offsets[i]+nullPadding.length>del_start){if(offsets[i]+nullPadding.length<del_end){offsets[i]=del_start-nullPadding.length}else{offsets[i]-=del_end-del_start}}}}if(mod[0]!==DIFF_DELETE){index1+=mod[1].length}}}}}text=text.substring(nullPadding.length,text.length-nullPadding.length);return text};mobwrite.shareTextareaObj.prototype.captureCursor_=function(){if('activeElement'in this.element&&!this.element.activeElement){return null}var padLength=this.dmp.Match_MaxBits/2;var text=this.element.value;var cursor={};if('selectionStart'in this.element){try{var selectionStart=this.element.selectionStart;var selectionEnd=this.element.selectionEnd}catch(e){return null}cursor.startPrefix=text.substring(selectionStart-padLength,selectionStart);cursor.startSuffix=text.substring(selectionStart,selectionStart+padLength);cursor.startOffset=selectionStart;cursor.collapsed=(selectionStart==selectionEnd);if(!cursor.collapsed){cursor.endPrefix=text.substring(selectionEnd-padLength,selectionEnd);cursor.endSuffix=text.substring(selectionEnd,selectionEnd+padLength);cursor.endOffset=selectionEnd}}else{var doc=this.element;while(doc.parentNode){doc=doc.parentNode}if(!doc.selection||!doc.selection.createRange){return null}var range=doc.selection.createRange();if(range.parentElement()!=this.element){return null}var newRange=doc.body.createTextRange();cursor.collapsed=(range.text=='');newRange.moveToElementText(this.element);if(!cursor.collapsed){newRange.setEndPoint('EndToEnd',range);cursor.endPrefix=newRange.text;cursor.endOffset=cursor.endPrefix.length;cursor.endPrefix=cursor.endPrefix.substring(cursor.endPrefix.length-padLength)}newRange.setEndPoint('EndToStart',range);cursor.startPrefix=newRange.text;cursor.startOffset=cursor.startPrefix.length;cursor.startPrefix=cursor.startPrefix.substring(cursor.startPrefix.length-padLength);newRange.moveToElementText(this.element);newRange.setEndPoint('StartToStart',range);cursor.startSuffix=newRange.text.substring(0,padLength);if(!cursor.collapsed){newRange.setEndPoint('StartToEnd',range);cursor.endSuffix=newRange.text.substring(0,padLength)}}if('scrollTop'in this.element){cursor.scrollTop=this.element.scrollTop/this.element.scrollHeight;cursor.scrollLeft=this.element.scrollLeft/this.element.scrollWidth}return cursor};mobwrite.shareTextareaObj.prototype.restoreCursor_=function(cursor){this.dmp.Match_Distance=1000;this.dmp.Match_Threshold=0.9;var padLength=this.dmp.Match_MaxBits/2;var newText=this.element.value;var pattern1=cursor.startPrefix+cursor.startSuffix;var pattern2,diff;var cursorStartPoint=this.dmp.match_main(newText,pattern1,cursor.startOffset-padLength);if(cursorStartPoint!==null){pattern2=newText.substring(cursorStartPoint,cursorStartPoint+pattern1.length);diff=this.dmp.diff_main(pattern1,pattern2,false);cursorStartPoint+=this.dmp.diff_xIndex(diff,cursor.startPrefix.length)}var cursorEndPoint=null;if(!cursor.collapsed){pattern1=cursor.endPrefix+cursor.endSuffix;cursorEndPoint=this.dmp.match_main(newText,pattern1,cursor.endOffset-padLength);if(cursorEndPoint!==null){pattern2=newText.substring(cursorEndPoint,cursorEndPoint+pattern1.length);diff=this.dmp.diff_main(pattern1,pattern2,false);cursorEndPoint+=this.dmp.diff_xIndex(diff,cursor.endPrefix.length)}}if(cursorStartPoint===null&&cursorEndPoint!==null){cursorStartPoint=cursorEndPoint}else if(cursorStartPoint===null&&cursorEndPoint===null){cursorStartPoint=cursor.startOffset}if(cursorEndPoint===null){cursorEndPoint=cursorStartPoint}if('selectionStart'in this.element){this.element.selectionStart=cursorStartPoint;this.element.selectionEnd=cursorEndPoint}else{var doc=this.element;while(doc.parentNode){doc=doc.parentNode}if(!doc.selection||!doc.selection.createRange){return}var snippet=this.element.value.substring(0,cursorStartPoint);var ieStartPoint=snippet.replace(/\r\n/g,'\n').length;var newRange=doc.body.createTextRange();newRange.moveToElementText(this.element);newRange.collapse(true);newRange.moveStart('character',ieStartPoint);if(!cursor.collapsed){snippet=this.element.value.substring(cursorStartPoint,cursorEndPoint);var ieMidLength=snippet.replace(/\r\n/g,'\n').length;newRange.moveEnd('character',ieMidLength)}newRange.select()}if('scrollTop'in cursor){this.element.scrollTop=cursor.scrollTop*this.element.scrollHeight;this.element.scrollLeft=cursor.scrollLeft*this.element.scrollWidth}};mobwrite.shareTextareaObj.normalizeLinebreaks_=function(text){return text.replace(/\r\n/g,'\n').replace(/\r/g,'\n')};mobwrite.shareTextareaObj.shareHandler=function(node){if(typeof node=='string'){node=document.getElementById(node)}if(node&&'value'in node&&'type'in node&&(node.type=='textarea'||node.type=='text'||node.type=='password')){if(mobwrite.UA_webkit){node.addEventListener('focus',function(){this.activeElement=true},false);node.addEventListener('blur',function(){this.activeElement=false},false);node.activeElement=false}return new mobwrite.shareTextareaObj(node)}return null};mobwrite.shareHandlers.push(mobwrite.shareTextareaObj.shareHandler);